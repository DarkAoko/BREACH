<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_guard1_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ENEMY</parentName>
  <maskName>spr_guard1_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
hud_border = 0;
//Facing 1-right -1-left
facing=1;
//horizontal speed
speedx=0;
//vertical speed
speedy=.1;
//walk speed
speed_walk = 3;
//run speed
speed_run = 0;
//jump speed
speed_jump = -12;
//max fall speed
speed_fall = 8;
//acceleration
speed_fric = speed_walk;
//acceleration
speed_shoot = speed_walk;
//deceleration
speed_accel = speed_walk;
//falling rate
speed_grav = 0.53;
//no input state
acting=false;
//walking state
walking=false;
//going up state
rising=false;
//going down state
falling=false;
//using vac/water
shooting=false;
//jumping
jumping=false;
//on solid ground
grounded=false;
//damage frames
hit_frame=150;
//can be hurt
canhurt=true;
//hopping over gap
hop=false;
//Can vac
canshoot=true;
//Aiming | 1 = up, -1 = down
aiming = 0;
//affected by windup
upwind=false;
//where projectile shoots from
gun_x=0;gun_y=0;
//Slowed By Loucas
loucas = 0;
//On cam
on_cam=true;
//draw sprite?
sight=true;
//pos change when riding move
hor=0;
ver=0;
up=0;
c_rotation = 0;
//1 = up | -1 = down
aim = 0;
//0 = shot | 1 = rapid | 2 = spread | 3 = stick | 4 = grenade
weapon = 4;
rapid = 4
//0 = assault | 1 = riot | 2 = scout
type = 2;

if type =1{
    shield = instance_create(x,y,obj_enem_guard_shield);
    shield.image_xscale = facing;
    shield.owner = id;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sprite setup - Default
mask_index      = spr_guard1_mask;
sprite_idle     = spr_guard1_idle;
sprite_run      = spr_guard1_run;
sprite_jump     = spr_guard1_jump;
sprite_shoot    = spr_guard1_shoot;

sprite_Didle    = spr_guard1_idle_down;
sprite_Uidle    = spr_guard1_idle_up;
sprite_Drun     = spr_guard1_run_down;
sprite_Urun     = spr_guard1_run_up;
sprite_Ujump    = spr_guard1_jump_up;
sprite_Djump    = spr_guard1_jump_down;

sprite_stick    = spr_guard1_stick;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI Variables

//pattern states
idle = "idle";
caution = "caution";
alert = "alert";
shock = "shock";
search = "search";
find  = "find";
pursue = "pursue";
state = idle;
//AI "controls"
ai_left = false;
ai_right = false;
ai_up = false;
ai_down = false;
ai_a = false;
ai_a_press=false;
ai_b = false;
//Sight range
sight_caution = 220;
sight_alert = 110;
yellow = -1;
red = -1;
//target to chase
target = -1;
target_x = 0;
target_y = 0;
//can cause damage by touch
attack = true;
dmg = 3;
//block id
block_id = -1;
jump_y = 0;
start_y = 0;
//gunshot delay
fire_count = 0;
//swinging stick
stick = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loucas
loucas=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rapid Burst
if rapid &gt; 0{
    audio_play_sound_on(s_sfx,sound0,false,10);
    shot = instance_create(gun_x,gun_y,obj_player_shot_burst);
    shot.direction = aim;
    shot.image_angle = aim * facing;
    shot.owner=id;
    if rapid = 0{alarm[0]=irandom_range(60,120);exit;}
    if rapid&gt;0{rapid -= 1;alarm[4]=5;exit;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Riot Flip
facing *= -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blnking invincible sprite
if canhurt=false{
    sight=false;
    if sight{sight=false;}
    if !sight{sight=true;}
    alarm[2]=5;
    exit;
    }
if canhurt=true{
    sight=true;
    exit;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state switch
if state = shock{state = search;exit;}
if state = find{state = idle;exit;}
if state = alert{
    state = pursue;
    ai_b = true;
    if PLAYER.x &lt; x {facing = 1;}
    if PLAYER.x &gt; x {facing = -1;}
    exit;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shooting off
shooting=false;
canhurt=true;
canshoot=true;
ai_b = true;
rapid=4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision Correction

//prevent block clipping
if !acting{  
 if  (place_meeting(x,y,obj_block) or place_meeting(x,y,obj_block_pass_dummy) and speedy=0)
  {y-=1;}
//when on solid ground
if place_meeting(x,y+2,obj_block_pass_dummy) and speedy&gt;0{
grounded=true;}  
//room borders
x = clamp(x,0,room_width);
y = clamp(y,0,room_height);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if acting=false{
//if press right and not front of block
        if (ai_right) and !place_meeting(x+speedx,y,obj_block){
        //if not on slope, increase speed
           speedx += speed_accel;
            //if using vac, lock direction
            facing = 1;
            walking = true;
        }
//if press left and not front of block
        if (ai_left) and !place_meeting(x+speedx,y,obj_block){
        //if not on slope, increase speed
            speedx -= speed_accel;
            //if using vac, lock direction
            facing = -1;
            walking = true;
        }
//if walking in front of block        
        if (speedx&gt;0) and place_meeting(x+speedx,y,obj_block){
            speedx = 0;
            if (!shooting) {facing = 1;}
            walking = true;
        }
        if (speedx&lt;0) and place_meeting(x+speedx,y,obj_block){
            speedx = 0;
            if (!shooting) {facing = -1;}
            walking = true;
        }        
        
//Jumping        
        if( (ai_a) and grounded and speedy=0) and !collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_block_pass,false,true) {
            speedy = speed_jump;
            jumping=true;
        }
//Spring Jump
        bounce_snap = collision_rectangle( bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_bounce, false, true );
        if bounce_snap != noone and (speedy&gt;0){
                speedy = speed_jump * 1.60;
                bounce_snap.image_speed=1;
            }
//Short Hop            
        if !ai_a and jumping and (speedy &lt; 0){
            speedy /= 4;
            jumping=false;
        }
//Head Bump        
        if place_meeting(x,y+speedy,obj_block) and speedy&lt;0{
           speedy=4;
            }
//Aiming
        if (ai_up) and !(ai_down){
            aiming = 1;
            aim = 90;
            }
        if !(ai_up) and (ai_down){
            aiming = -1;
            aim = 270;
            }
        if !(ai_up) and !(ai_down){
            aiming = 0;
            if facing = 1{aim = 0;}
            if facing = -1{aim = 180;}
            }
  if speedy&gt;0{falling=true;rising=false;}  if speedy&lt;0{falling=false;rising=true;} if speedy=0{falling=false;rising=false;}      
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Changer

gun_x = x +((sprite_get_bbox_left(sprite_index) - sprite_get_xoffset(sprite_index)) * facing );
gun_y = y + sprite_get_bbox_top (sprite_index) - sprite_get_yoffset(sprite_index);
if !stick{
//idle
    if !acting and !walking and !rising and !falling and !shooting
    and grounded{
        image_speed = .18;
        if aiming = 0{
            sprite_index = sprite_idle;
            }
        if aiming = 1{
            sprite_index = sprite_Uidle;
            }
        if aiming = -1{
            sprite_index = sprite_Didle;
            }
        }
//shooting
    if !acting and !walking and !rising and !falling and shooting
    and grounded{
        image_speed = .18;
        if aiming = 0{
            sprite_index = sprite_shoot; 
            }
        if aiming = 1{
            sprite_index = sprite_Uidle;
            }
        if aiming = -1{
            sprite_index = sprite_Didle;
            }
        }
//running
    if !acting and walking  and !rising and !falling and grounded{
        image_speed = .28;
        if aiming = 0{
            sprite_index = sprite_run;
            }
        if aiming = 1{
            sprite_index = sprite_Urun;
            }
        if aiming = -1{
            sprite_index = sprite_Drun;
            }
        }
//jumping up
    if !acting and rising and !falling
    {
        image_index = 0;
        image_speed = 0;
        if aiming = 0{
            sprite_index = sprite_jump;
            }
        if aiming = 1{
            sprite_index = sprite_Ujump;
            }
        if aiming = -1{
            sprite_index = sprite_Djump;
            }
        }
//jumping down
    if !acting and falling and !rising
    {
        image_index = 1;
        image_speed = 0;
        if aiming = 0{
            sprite_index = sprite_jump;
            }
        if aiming = 1{
            sprite_index = sprite_Ujump;
            }
        if aiming = -1{
            sprite_index = sprite_Djump;
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speed Modifiers
if acting=false {
if !place_meeting(x,y,obj_water) and loucas=0{
    x += speedx/2;
    if !upwind{y += speedy;}
    if !place_meeting(x,y-up,obj_block){y -= up;}
    speed_grav = 1;
    speed_fall = 25;
    }
if place_meeting(x,y,obj_water) and loucas=0{
    x += (speedx/2);
    y += speedy*.5;
    speed_grav = .5;
    speed_fall = 15;
    }
if loucas&gt;0 {
    x += (speedx/2)/loucas;
    y += speedy/2;
    }
if(place_meeting(x,y+16,obj_block) or place_meeting(x,y+16,obj_block_pass) ){
    speed_fric = speed_walk;
    speed_accel = speed_walk;
}
if(place_meeting(x,y+16,obj_ice)){
    speed_fric = .05;
    speed_accel = speed_walk*.75;
    if (!ai_left and !ai_right) and speedx&gt;0{
        speedx -= speed_fric;
        }
    if (!ai_left and !ai_right) and speedx&lt;0{
        speedx += speed_fric; 
        }
}
if(!place_meeting(x,y+16,obj_ice)){
    if (!ai_left and !ai_right){
        speedx = 0;
        }
}
if speedx=0{
    walking = false;
}
    if shooting =false and walking=true and speedx &gt; speed_walk{
        speedx = speed_walk + speed_run;
        }
    if shooting =false and walking=true and speedx &lt; -(speed_walk){
        speedx = -(speed_walk + speed_run);
        }
    if shooting =true and speedx &lt; -(speed_shoot){
        speedx = -(speed_shoot + speed_run);
        }
    if shooting =true and speedx &gt; speed_shoot{
        speedx = speed_shoot + speed_run;
        }
    if grounded = false {
        speedy += speed_grav;
        }
        if speedy &gt; speed_fall{speedy = speed_fall;}

floor_snap = collision_rectangle( bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_block, false, true );
if floor_snap != noone and speedy&gt;=0{
speedy=0;rising=false;falling=false;jumping=false;fall_time=0;ai_a=false;grounded=true;jump_y = 0
y = floor_snap.bbox_top - sprite_get_height(mask_index * image_yscale) + sprite_get_yoffset(mask_index);
} 
pass_snap = collision_rectangle( bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_block_pass, false, true );
if pass_snap != noone and speedy&gt;=0{
speedy=0;rising=false;falling=false;jumping=false;fall_time=0;ai_a=false;grounded=true;jump_y = 0
y = pass_snap.bbox_top - sprite_get_height(mask_index * image_yscale) + sprite_get_yoffset(mask_index);
}
if floor_snap = noone and pass_snap = noone{grounded = false;}
/*
if ((!place_meeting(x,bbox_bottom+speedy,obj_block)) and (!place_meeting(x,bbox_bottom+speedy,obj_block_pass))) {
    grounded = false;
    }
if ((place_meeting(x,bbox_bottom+speedy,obj_block)) or (place_meeting(x,bbox_bottom+speedy,obj_block_pass))) {
    if speedy &gt; 0{ai_a = false;}
    if speedy = 0{grounded = true;}
    }
*/
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gunplay 
if !acting and !LOADING{
if PLAYER.x &gt; x - 64 and PLAYER.x &lt; x+64{
    if PLAYER.y &lt; y-50{
        ai_up = true;
        ai_down=false;
    }
    if PLAYER.y &gt; y+50{
        ai_up = false;
        ai_down=true;
    }
    if PLAYER.y &gt; y-50 and PLAYER.y &lt; y+50{
        ai_up = false;
        ai_down=false;
    }
}
    if PLAYER.x &lt; x - 64 or PLAYER.x &gt; x+64{
        ai_up = false;
        ai_down=false;
    }  
//Shoot
if ai_b and canshoot=true{
        shooting = true;
        canshoot=false;
        alarm[0]=irandom_range(60,120);
        ai_b = false;  
//basic
        if weapon = 0{
            audio_play_sound_on(s_sfx,sound0,false,10);
            shot = instance_create(gun_x,gun_y,obj_player_shot_shock);
            shot.image_xscale = facing;
            shot.direction = aim;
            shot.image_angle = aim;
            shot.owner=id;     
        }
//rapid fire
        if (weapon = 1 and rapid &gt;= 4 ) {
            rapid = 4;
            shooting = true;
            alarm[4]=1;
        }
//spread shot
        if (weapon = 2){
        shot = instance_create(gun_x,gun_y,obj_player_shot_blast);
        shot.direction = aim;
        shot.image_angle = aim * facing;
        shot.owner = id;
        
        shot = instance_create(gun_x,gun_y,obj_player_shot_blast);
        shot.direction = aim + 5;
        shot.image_angle = (aim * facing) + 5;
        shot.owner = id;
        
        shot = instance_create(gun_x,gun_y,obj_player_shot_blast);
        shot.direction = aim + 355;
        shot.image_angle = (aim * facing) + 355;
        shot.owner = id;
        }
//stick
        if weapon = 3{
            stick=true;
            image_index = 0;
            image_speed = .5;
            sprite_index = sprite_stick;
            dmg = 10;
            ai_b=false;
            canshoot=false;
        }
//basic
        if weapon = 4{
            audio_play_sound_on(s_sfx,sound0,false,10);
            shot = instance_create(gun_x,gun_y,obj_player_bomb);
            shot.owner=id;     
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Path of sight
//Sight range
sight_caution = 220*(light_sight);
sight_alert = 110*(light_sight);

if rectangle_in_triangle(PLAYER.bbox_left,PLAYER.bbox_top,PLAYER.bbox_right,PLAYER.bbox_bottom,x,y,x+ (sight_caution*facing),y-64,x+ (sight_caution*facing),y+64)
and state = idle{
    if !collision_line(x,y,PLAYER.x,PLAYER.y,obj_block,true,true){
        state = shock;
        alarm[1]=60;
        ai_left = false;
        ai_right = false;
        target_x = PLAYER.x;
        target_y = PLAYER.y;
        }
    }
if rectangle_in_triangle(PLAYER.bbox_left,PLAYER.bbox_top,PLAYER.bbox_right,PLAYER.bbox_bottom,x,y,x+ (sight_alert*facing),y-32,x+ (sight_alert*facing),y+32)
and (state != alert and state != pursue){
    if !collision_line(x,y,PLAYER.x,PLAYER.y,obj_block,true,true){
        state = alert;
        alarm[1]=60;
        ai_left = false;
        ai_right = false;
        speed_run = 1;
        fire_count = irandom_range(60,180);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Assault - Pattern - Pacing
///Movement
if type = 0{
    if !acting and state = idle and speedy = 0{   
            if (facing = 1) and !place_meeting(x+speedx,y,obj_block){
                ai_right=true;
                ai_left=false;
            }
            if (facing = -1) and !place_meeting(x+speedx,y,obj_block){
                ai_left=true;
                ai_right=false;
            }
            if (facing = 1) and place_meeting(x+speedx,y,obj_block){
                ai_right=false;
                ai_left=true;
                speedx *= -1;
                facing *= -1;
            }
            if (facing = -1) and place_meeting(x+speedx,y,obj_block){
                ai_left=false;
                ai_right=true;
                speedx *= -1;
                facing *= -1;
            }
            if (facing = 1) and (!place_meeting(x+speedx,bbox_bottom+5,obj_block) and !place_meeting(x+speedx,bbox_bottom+5,obj_block_pass)){
                ai_right=false;
                ai_left=true;
                speedx *= -1;
                facing *= -1;
            }
            if (facing = -1) and (!place_meeting(x+speedx,bbox_bottom+5,obj_block) and !place_meeting(x+speedx,bbox_bottom+5,obj_block_pass)){
                ai_left=false;
                ai_right=true;
                speedx *= -1;
                facing *= -1;
            }  
      
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Assault - Pattern - Search
//Movement
if type = 0{
    if !acting and state = search and speedy = 0{   
            if (target_x &gt; x) and !place_meeting(x+speedx,y,obj_block){
                ai_right=true;
                ai_left=false;
            }
            if (target_x &lt; x) and !place_meeting(x+speedx,y,obj_block){
                ai_left=true;
                ai_right=false;
            }
            if point_in_rectangle(target_x,target_y,bbox_left-32,bbox_top-64,bbox_right+32,bbox_bottom+64){
                state = find;
                alarm[1]=120;
                ai_right=false;
                ai_left=false;
                } 
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Assault - Pattern - Pursue
//Movement
if type = 0{
    if !acting and state = pursue{
    target_x = PLAYER.x;
    target_y = PLAYER.y;   
            //left/right pursue
            if !point_in_rectangle(target_x,y,bbox_left-32,bbox_top,bbox_right+32,bbox_bottom){
                if (target_x &gt; x) and !place_meeting(x+speedx,y,obj_block){
                    ai_right=true;
                    ai_left=false;
                }
                if (target_x &lt; x) and !place_meeting(x+speedx,y,obj_block){
                    ai_left=true;
                    ai_right=false;
                }
            }
            //stop walking when close to prevent twitch   
            if point_in_rectangle(target_x,y,bbox_left-32,bbox_top,bbox_right+32,bbox_bottom){
                ai_right=false;
                ai_left=false;
            }
            //jumping
            if (target_x &gt; x) and place_meeting(x+32,y,obj_block){
                block = collision_point(x+32,y,obj_block,false,true);
                if block != noone and speedy=0{
                    if block.bbox_top &gt;= y - 64{
                        ai_a = true;
                        jump_y = bbox_bottom - (bbox_bottom - block.bbox_top);
                        }
                    }
            }
            if (target_x &lt; x) and place_meeting(x-32,y,obj_block){
                block = collision_point(x-32,y,obj_block,false,true);
                if block != noone and speedy=0{
                    if block.bbox_top &gt;= y - 64{
                        ai_a = true;
                        jump_y = bbox_bottom - (bbox_bottom - block.bbox_top);
                        }
                    }
    
            }
                pass = collision_line(x,bbox_bottom,x,bbox_bottom - 96,obj_block_pass,false,true)
                if pass != noone and speedy=0 and PLAYER.y &lt;= pass.bbox_top{
                        ai_a = true;
                        jump_y = bbox_bottom - (bbox_bottom - pass.bbox_top);
                    }
                if ai_a and bbox_bottom &lt; jump_y - 32{
                    ai_a = false;
                }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Riot - Pattern - Idle
if type != 1 and state != idle{alarm[3] = -1;}
if type =1{
    if alarm[3] = -1 and state = idle{alarm[3] = irandom_range(120,180);}
    if shield != -1{
    shield.image_xscale = facing;}
    if state = pursue{
        if PLAYER.x &gt; x {facing =1;}
        if PLAYER.x &lt; x {facing =-1;}
        if PLAYER.x &gt; x - 64 and PLAYER.x &lt; x+64{
            if PLAYER.y &lt; y-50{
                shield.image_angle = 90 * facing;
            }
            if PLAYER.y &gt; y+50{
                shield.image_angle = 270 * facing;
            }
            if PLAYER.y &gt; y-50 and PLAYER.y &lt; y+50{
                shield.image_angle = 0;
            }  
        }
        if PLAYER.x &lt; x - 64 or PLAYER.x &gt; x+64{
            shield.image_angle = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scout - Pattern - Idle
if type != 2 and state != idle{alarm[3] = -1;}
if type =2 and state = idle{
    if alarm[3] = -1{alarm[3] = irandom_range(120,180);}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scout - Pattern - Flee
//Movement
if type = 2{
    if !acting and state = pursue{
    target_x = PLAYER.x;
    target_y = PLAYER.y;   
            //left/right flee
                if (facing = -1) and !place_meeting(x+speedx,y,obj_block){
                    ai_right=false;
                    ai_left=true;
                    }
                if (facing = 1) and !place_meeting(x+speedx,y,obj_block){
                    ai_left=false;
                    ai_right=true;
                }
            //jumping
            if place_meeting(x+32,bbox_bottom,obj_block){
                block = collision_point(x+32,bbox_bottom,obj_block,false,true);
                if block != noone and grounded{
                    if block.bbox_top &gt;= y - 64{
                    ai_a = true;
                        jump_y = bbox_bottom - (bbox_bottom - block.bbox_top);
                        }
                    else{facing = -1;}
                    }
            }
            if place_meeting(x-32,bbox_bottom,obj_block){
                block = collision_point(x-32,bbox_bottom,obj_block,false,true);
                if block != noone and grounded{
                    if block.bbox_top &gt;= y - 64{
                    ai_a = true;
                        jump_y = bbox_bottom - (bbox_bottom - block.bbox_top);
                        }
                    else{facing = 1;}
                    }
    
            }
            //Jump to Passthrough
            pass = collision_line(x,bbox_bottom,x,bbox_bottom - 96,obj_block_pass,false,true)
            if pass != noone and grounded{
                    ai_a = true;
                    jump_y = bbox_bottom - (bbox_bottom - pass.bbox_top);
                }
            if ai_a and bbox_bottom &lt; jump_y - 32{
                if jump_y = 0{ai_a = false;}
            }
            //Jump over gap
            jumpblock = collision_line(x+128*facing,bbox_bottom-96,x+128*facing,y+64,obj_block,false,true);
            jumppass = collision_line(x+128*facing,bbox_bottom-96,x+128*facing,y+64,obj_block_pass,false,true);
            if jumpblock != noone or jumppass != noone{
                if !place_meeting(x+8*facing,bbox_bottom+1,obj_block) and !place_meeting(x+8*facing,bbox_bottom+1,obj_block_pass) and grounded
                and !collision_line(x,y,x,y-96,obj_block,false,true) and speedy=0{
                    ai_a = true;
                    hop = true;
                    }
                if hop and (collision_line(x,y,x,y+128,jumpblock,false,true) or collision_line(x,y,x,y+128,jumppass,false,true)){
                    ai_a=false;
                    hop=false;
                    }
                }
            //Falldown
            fallblock = collision_line(x+speedx*facing,bbox_bottom,x+speedx*facing,room_height,obj_block,false,true);
            fallpass = collision_line(x+speedx*facing,bbox_bottom,x+speedx*facing,room_height,obj_block_pass,false,true);
            if (jumpblock = noone and jumppass = noone){
                 if (fallblock = noone and fallpass = noone) and grounded{
                     ai_right = !ai_right;
                     ai_left = !ai_left;
                     facing *= -1;
                     speedx *= -1;
                }               
            }

    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = sprite_stick{
    alarm[0]=irandom_range(60,120);
    stick = false;
    dmg=3;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw sprite on screen
if sight{
    draw_sprite_ext(sprite_index,image_index,x,y,facing,image_yscale,image_angle,image_blend,image_alpha);
    }
/*
draw_set_color(c_yellow);
draw_triangle(x,y,x+ (sight_caution),y-64,x+ (sight_caution),y+64,false);
draw_set_colour(c_red);
draw_triangle(x,y,x+ (sight_alert),y-32,x+ (sight_alert),y+32,false);
draw_circle(gun_x,gun_y,5,false);
draw_set_colour(c_lime);
draw_line(x,y,PLAYER.x,PLAYER.y);
draw_circle(target_x,target_y,5,false);
draw_circle(x,jump_y,5,false);
*/
if state = shock{
    draw_sprite(spr_caution,0,x,y-32);
    }
if state = alert{
    draw_sprite(spr_alert,0,x,y-32);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
