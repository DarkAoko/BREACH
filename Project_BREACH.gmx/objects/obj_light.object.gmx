<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-900</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls for dynamic light.
//Surface is created here. It only covers the view, not the whole room.
Surf_Light = surface_create(view_wview[0],view_hview[0])

//Array of objects that generates light. Add to the item, and place the object giving off light here.

Item[0,0] = obj_demo_light;
Item[1,0] = obj_light_view;
Item[2,0] = obj_light_player;
Item[3,0] = obj_light_fire_outer;
Item[4,0] = obj_light_fire_inner;
Item[5,0] = obj_light_spot;
Item[6,0] = obj_light_shot_0;
Item[7,0] = obj_light_player_flash;

Blackness_Value = light_room; //The alpha value of the 'darkness'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Objects create light
surface_set_target(Surf_Light);

draw_clear_alpha(c_black, Blackness_Value); //The opacity of the darkness is set here.

var count, l_source, l_sprite, l_xscale, l_yscale, l_color, l_flick, l_flick_id, l_max_range;

//That part will loops through all objects listed on the array.
count = 0;
var xx, yy;
repeat(array_height_2d(Item))
{
l_source = Item[count,0];

    with(l_source)
    {
        l_max_range = scr_max_range();
        if scr_is_on_view(0, l_max_range) and light_room &gt; 0.5//See inside script for description
        {
        c_rotation = image_angle;
        l_sprite = sprite_index;
        l_xscale = image_xscale;
        l_yscale = image_yscale;
        l_color = image_blend;
        xx = x-view_xview[0];
        yy = y-view_yview[0];
        l_flick_id = image_speed;//flicker speed of the light
        l_flick = choose(1, 1, 1, 1, 1, 1, l_flick_id); //You can add or remove some '1'.
        draw_set_blend_mode(bm_subtract); //Punch a gradient hole
        draw_sprite_ext(l_sprite, 0, xx, yy, l_xscale*l_flick, l_yscale*l_flick, c_rotation, c_black, 1);
        draw_set_blend_mode(bm_zero); //Add some color
        draw_sprite_ext(l_sprite, 0, xx, yy, l_xscale*l_flick, l_yscale*l_flick, c_rotation, l_color, 0.5); //You can change the last argument here.        
        }
    }
    
count++;
}

draw_set_blend_mode(bm_normal);
surface_reset_target();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Light Controls

//Limit range of light
light_room = clamp(light_room,0,1);
light_sight = clamp(light_sight,0,1);
//The alpha value of the 'darkness'
Blackness_Value = light_room; 
light_sight = 1 - light_room;
//DEBUG LIGHT CONTROLS
if mouse_wheel_up()
{
light_room -= 0.025;
}
if mouse_wheel_down()
{
light_room += 0.025;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free Surface
surface_free(Surf_Light); //Good habits!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface Draw
if(surface_exists(Surf_Light)) //A safe way to draw a surface: Make sure it exists.
{
draw_surface_ext(Surf_Light, view_xview[0], view_yview[0], 1, 1, 0, c_white, 1); //We use our alpha value right here: surf_alpha.
}
else
{
Surf_Light = surface_create(view_wview[0],view_hview[0]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
