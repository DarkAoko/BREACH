<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch controller mode based on input
//detect keyboard presses
if keyboard_check_pressed(vk_anykey){P1_INDEX=5;}
//detect 4 gamepad slots
index = 0;
repeat(4){
    if gamepad_axis_value(index,gp_axislh)&gt;0.2 {P1_INDEX=index;}
    if gamepad_axis_value(index,gp_axislh)&lt;-0.2 {P1_INDEX=index;}
    if gamepad_axis_value(index,gp_axislv)&gt;0.2 {P1_INDEX=index;}
    if gamepad_axis_value(index,gp_axislv)&lt;-0.2 {P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_face1){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_face2){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_face3){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_face4){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_shoulderl){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_shoulderr){P1_INDEX=index;}
    if gamepad_button_value(index,gp_shoulderrb)&gt;.1{P1_INDEX=index;}
    if gamepad_button_value(index,gp_shoulderlb)&gt;.1{P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_select){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_start){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_stickl){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_stickr){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_padu){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_padd){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_padl){P1_INDEX=index;}
    if gamepad_button_check_pressed(index,gp_padr){P1_INDEX=index;}
    index += 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Call device input detection
//if keyboard mode
if P1_INDEX = 5{
    script_execute(scr_control_keyboard);
    }
//if gamepad mode
if P1_INDEX &gt;= 0 and P1_INDEX &lt;= 4{
    script_execute(scr_control_gamepad,P1_INDEX);   
    }
//clears all input
if P1_INDEX=-1{
    io_clear();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
