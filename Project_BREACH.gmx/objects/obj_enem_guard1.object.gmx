<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_guard1_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ENEMY</parentName>
  <maskName>spr_guard1_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
hud_border = 0;
//Facing 1-right -1-left
facing=1;
//horizontal speed
speedx=0;
//vertical speed
speedy=.1;
//walk speed
speed_walk = 3;
//run speed
speed_run = 0;
//jump speed
speed_jump = -13;
//max fall speed
speed_fall = 8;
//acceleration
speed_fric = speed_walk;
//acceleration
speed_shoot = speed_walk;
//deceleration
speed_accel = speed_walk;
//falling rate
speed_grav = 0.55;
//no input state
acting=false;
//walking state
walking=false;
//going up state
rising=false;
//going down state
falling=false;
//using vac/water
shooting=false;
//jumping
jumping=false;
//on solid ground
grounded=false;
//damage frames
hit_frame=150;
//can be hurt
canhurt=true;
//Can vac
canshoot=true;
//Aiming | 1 = up, -1 = down
aiming = 0;
//affected by windup
upwind=false;
//where projectile shoots from
gun_x=0;gun_y=0;
//Slowed By Loucas
loucas = 0;
//On cam
on_cam=true;
//draw sprite?
sight=true;
//pos change when riding move
hor=0;
ver=0;
up=0;
c_rotation = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sprite setup - Default
mask_index      = spr_guard1_mask;
sprite_idle     = spr_guard1_idle;
sprite_run      = spr_guard1_run;
sprite_jump     = spr_guard1_jump;
sprite_shoot    = spr_guard1_shoot;

sprite_Didle    = spr_guard1_idle_down;
sprite_Uidle    = spr_guard1_idle_up;
sprite_Drun     = spr_guard1_run_down;
sprite_Urun     = spr_guard1_run_up;
sprite_Ujump    = spr_guard1_jump_up;
sprite_Djump    = spr_guard1_jump_down;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI Variables

//pattern states
idle = "idle";
caution = "caution";
alert = "alert";
shock = "shock";
search = "search";
find  = "find";
pursue = "pursue";
state = idle;
//AI "controls
ai_left = false;
ai_right = false;
ai_up = false;
ai_down = false;
ai_a = false;
ai_b = false;
//Sight range
sight_caution = 220;
sight_alert = 110;
yellow = -1;
red = -1;
//target to chase
target = -1;
target_x = 0;
target_y = 0;
//can cause damage by touch
attack = true;
dmg = 3;
//block id
block_id = -1;
jump_y = 0;
start_y = 0;
//gunshot delay
fire_count = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loucas
loucas=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blnking invincible sprite
if canhurt=false{
    sight=false;
    if sight{sight=false;}
    if !sight{sight=true;}
    alarm[2]=5;
    exit;
    }
if canhurt=true{
    sight=true;
    exit;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state switch
if state = shock{state = search;exit;}
if state = find{state = idle;exit;}
if state = alert{state = pursue;exit;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shooting off
shooting=false;
canhurt=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision Correction

//prevent block clipping
if !acting{  
 if  (place_meeting(x,y,obj_block) or place_meeting(x,y,obj_block_pass_dummy) and speedy=0)
  {y-=1;}
//when on solid ground
if place_meeting(x,y+2,obj_block_pass_dummy) and speedy&gt;0{
grounded=true;}  
//room borders
x = clamp(x,0,room_width);
y = clamp(y,0,room_height);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if acting=false{
//if press right and not front of block
        if (ai_right) and !place_meeting(x+speedx,y,obj_block){
        //if not on slope, increase speed
           speedx += speed_accel;
            //if using vac, lock direction
            facing = 1;
            walking = true;
        }
//if press left and not front of block
        if (ai_left) and !place_meeting(x+speedx,y,obj_block){
        //if not on slope, increase speed
            speedx -= speed_accel;
            //if using vac, lock direction
            facing = -1;
            walking = true;
        }
//if walking in front of block        
        if (speedx&gt;0) and place_meeting(x+speedx,y,obj_block){
            speedx = 0;
            if (!shooting) {facing = 1;}
            walking = true;
        }
        if (speedx&lt;0) and place_meeting(x+speedx,y,obj_block){
            speedx = 0;
            if (!shooting) {facing = -1;}
            walking = true;
        }        
        
//Jumping        
        if( (ai_a) and grounded and speedy=0) or ((ai_a) and place_meeting(x,y+2,obj_block_pass)) {
            speedy = speed_jump;
            jumping=true;
        }
//Spring Jump
        bounce_snap = collision_rectangle( bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_bounce, false, true );
        if bounce_snap != noone and (speedy&gt;0){
                speedy = speed_jump * 1.60;
                bounce_snap.image_speed=1;
            }
//Short Hop            
        if !ai_a and jumping and (speedy &lt; 0){
            speedy /= 4;
            jumping=false;
        }
//Head Bump        
        if place_meeting(x,y+speedy,obj_block) and speedy&lt;0{
           speedy=4;
            }
//Aiming
        if (ai_up) and !(ai_down){
            aiming = 1;
            }
        if !(ai_up) and (ai_down){
            aiming = -1;
            }
        if !(ai_up) and !(ai_down){
            aiming = 0;
            }
  if speedy&gt;0{falling=true;rising=false;}  if speedy&lt;0{falling=false;rising=true;} if speedy=0{falling=false;rising=false;}      
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Changer

gun_x = x +((sprite_get_bbox_left(sprite_index) - sprite_get_xoffset(sprite_index)) * facing );
gun_y = y + sprite_get_bbox_top (sprite_index) - sprite_get_yoffset(sprite_index);

//idle
if !acting and !walking and !rising and !falling and !shooting
and grounded{
    image_speed = .18;
    if aiming = 0{
        sprite_index = sprite_idle;
        }
    if aiming = 1{
        sprite_index = sprite_Uidle;
        }
    if aiming = -1{
        sprite_index = sprite_Didle;
        }
    }
//shooting
if !acting and !walking and !rising and !falling and shooting
and grounded{
    image_speed = .18;
    if aiming = 0{
        sprite_index = sprite_shoot; 
        }
    if aiming = 1{
        sprite_index = sprite_Uidle;
        }
    if aiming = -1{
        sprite_index = sprite_Didle;
        }
    }
//running
if !acting and walking  and !rising and !falling and grounded{
    image_speed = .18;
    if aiming = 0{
        sprite_index = sprite_run;
        }
    if aiming = 1{
        sprite_index = sprite_Urun;
        }
    if aiming = -1{
        sprite_index = sprite_Drun;
        }
    }
//jumping up
if !acting and rising and !falling
{
    image_index = 0;
    image_speed = 0;
    if aiming = 0{
        sprite_index = sprite_jump;
        }
    if aiming = 1{
        sprite_index = sprite_Ujump;
        }
    if aiming = -1{
        sprite_index = sprite_Djump;
        }
    }
//jumping down
if !acting and falling and !rising
{
    image_index = 1;
    image_speed = 0;
    if aiming = 0{
        sprite_index = sprite_jump;
        }
    if aiming = 1{
        sprite_index = sprite_Ujump;
        }
    if aiming = -1{
        sprite_index = sprite_Djump;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speed Modifiers
if acting=false {
if !place_meeting(x,y,obj_water) and loucas=0{
    x += speedx/2;
    if !upwind{y += speedy;}
    if !place_meeting(x,y-up,obj_block){y -= up;}
    speed_grav = 1;
    speed_fall = 25;
    }
if place_meeting(x,y,obj_water) and loucas=0{
    x += (speedx/2);
    y += speedy*.5;
    speed_grav = .5;
    speed_fall = 15;
    }
if loucas&gt;0 {
    x += (speedx/2)/loucas;
    y += speedy/2;
    }
if(place_meeting(x,y+16,obj_block) or place_meeting(x,y+16,obj_block_pass) ){
    speed_fric = speed_walk;
    speed_accel = speed_walk;
}
if(place_meeting(x,y+16,obj_ice)){
    speed_fric = .05;
    speed_accel = speed_walk*.75;
    if (!ai_left and !ai_right) and speedx&gt;0{
        speedx -= speed_fric;
        }
    if (!ai_left and !ai_right) and speedx&lt;0{
        speedx += speed_fric; 
        }
}
if(!place_meeting(x,y+16,obj_ice)){
    if (!ai_left and !ai_right){
        speedx = 0;
        }
}
if speedx=0{
    walking = false;
}
    if shooting =false and walking=true and speedx &gt; speed_walk{
        speedx = speed_walk + speed_run;
        }
    if shooting =false and walking=true and speedx &lt; -(speed_walk){
        speedx = -(speed_walk + speed_run);
        }
    if shooting =true and speedx &lt; -(speed_shoot){
        speedx = -(speed_shoot + speed_run);
        }
    if shooting =true and speedx &gt; speed_shoot{
        speedx = speed_shoot + speed_run;
        }
    if grounded = false {
        speedy += speed_grav;
        }
        if speedy &gt; speed_fall{speedy = speed_fall;}

floor_snap = collision_rectangle( bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_block, false, true );
if floor_snap &gt; -1 and speedy&gt;=0{
speedy=0;rising=false;falling=false;jumping=false;fall_time=0;grounded=true;
y = floor_snap.bbox_top - sprite_get_height(mask_index * image_yscale) + sprite_get_yoffset(mask_index);
} 
pass_snap = collision_rectangle( bbox_left, bbox_bottom, bbox_right, bbox_bottom+1, obj_block_pass, false, true );
if pass_snap &gt; -1 and speedy&gt;=0{
speedy=0;rising=false;falling=false;jumping=false;fall_time=0;grounded=true;
y = pass_snap.bbox_top - sprite_get_height(mask_index * image_yscale) + sprite_get_yoffset(mask_index);
}

if ((!place_meeting(x,y+6,obj_block)) and (!place_meeting(x,y+6,obj_block_pass))) {
    grounded = false;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gunplay 
if !acting and !LOADING{
//Shoot
if ai_b and canshoot=true{
    shooting = true;
    audio_play_sound_on(s_sfx,sound0,false,10);
    shot = instance_create(gun_x,gun_y,obj_player_shot_0);
    shot.image_xscale = facing;
    if aiming = 0{shot.hspeed = 10 * shot.image_xscale;}
    if aiming != 0{shot.image_angle = 90;shot.vspeed = 10 * -aiming;shot.image_yscale = -aiming;}
    canshoot=false;
    alarm[0]=120;
    ai_b = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pattern - Idle - Pacing
///Movement
if !acting and state = idle and speedy = 0{   
        if (facing = 1) and !place_meeting(x+speedx,y,obj_block){
            ai_right=true;
            ai_left=false;
        }
        if (facing = -1) and !place_meeting(x+speedx,y,obj_block){
            ai_left=true;
            ai_right=false;
        }
        if (facing = 1) and place_meeting(x+speedx,y,obj_block){
            ai_right=false;
            ai_left=true;
            speedx *= -1;
            facing *= -1;
        }
        if (facing = -1) and place_meeting(x+speedx,y,obj_block){
            ai_left=false;
            ai_right=true;
            speedx *= -1;
            facing *= -1;
        }
        if (facing = 1) and (!place_meeting(x+speedx,bbox_bottom+5,obj_block) and !place_meeting(x+speedx,bbox_bottom+5,obj_block_pass)){
            ai_right=false;
            ai_left=true;
            speedx *= -1;
            facing *= -1;
        }
        if (facing = -1) and (!place_meeting(x+speedx,bbox_bottom+5,obj_block) and !place_meeting(x+speedx,bbox_bottom+5,obj_block_pass)){
            ai_left=false;
            ai_right=true;
            speedx *= -1;
            facing *= -1;
        }  
  
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pattern - Search
//Movement
if !acting and state = search and speedy = 0{   
        if (target_x &gt; x) and !place_meeting(x+speedx,y,obj_block){
            ai_right=true;
            ai_left=false;
        }
        if (target_x &lt; x) and !place_meeting(x+speedx,y,obj_block){
            ai_left=true;
            ai_right=false;
        }
        if point_in_rectangle(target_x,target_y,bbox_left-32,bbox_top-64,bbox_right+32,bbox_bottom+64){
            state = find;
            alarm[1]=120;
            ai_right=false;
            ai_left=false;
            } 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pattern - Pursue
//Movement
if !acting and state = pursue{
target_x = PLAYER.x;
target_y = PLAYER.y;
        //fire at will
            fire_count -=1;
            if fire_count = 0{ai_b = true;fire_count = irandom_range(60,180);}

        //left/right pursue
        if !point_in_rectangle(target_x,y,bbox_left-32,bbox_top,bbox_right+32,bbox_bottom){
            if (target_x &gt; x) and !place_meeting(x+speedx,y,obj_block){
                ai_right=true;
                ai_left=false;
            }
            if (target_x &lt; x) and !place_meeting(x+speedx,y,obj_block){
                ai_left=true;
                ai_right=false;
            }
        }
        //stop walking when close to prevent twitch   
        if point_in_rectangle(target_x,y,bbox_left-32,bbox_top,bbox_right+32,bbox_bottom){
            ai_right=false;
            ai_left=false;
        }
        //jumping
        if (target_x &gt; x) and place_meeting(x+32,y,obj_block){
            block = collision_point(x+32,y,obj_block,false,true);
            if block != noone and speedy=0{
                if block.bbox_top &gt;= y - 64{
                    ai_a = true;
                    jump_y = bbox_bottom - (bbox_bottom - block.bbox_top);
                    }
                }
        }
        if (target_x &lt; x) and place_meeting(x-32,y,obj_block){
            block = collision_point(x-32,y,obj_block,false,true);
            if block != noone and speedy=0{
                if block.bbox_top &gt;= y - 64{
                    ai_a = true;
                    jump_y = bbox_bottom - (bbox_bottom - block.bbox_top);
                    }
                }

        }
            pass = collision_line(x,bbox_bottom,x,bbox_bottom - 96,obj_block_pass,false,true)
            if pass != noone and speedy=0 and PLAYER.y &lt;= pass.bbox_top{
                    ai_a = true;
                    jump_y = bbox_bottom - (bbox_bottom - pass.bbox_top);
                }
            if ai_a and bbox_bottom &lt; jump_y - 32{
                ai_a = false;
            }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Path of sight
if rectangle_in_triangle(PLAYER.bbox_left,PLAYER.bbox_top,PLAYER.bbox_right,PLAYER.bbox_bottom,x,y,x+ (sight_caution * facing),y-64,x+ (sight_caution * facing),y+64)
and state = idle{
    if !collision_line(x,y,PLAYER.x,PLAYER.y,obj_block,true,true){
        state = shock;
        alarm[1]=60;
        ai_left = false;
        ai_right = false;
        target_x = PLAYER.x;
        target_y = PLAYER.y;
        }
    }
if rectangle_in_triangle(PLAYER.bbox_left,PLAYER.bbox_top,PLAYER.bbox_right,PLAYER.bbox_bottom,x,y,x+ (sight_alert * facing),y-32,x+ (sight_alert * facing),y+32)
and (state != alert and state != pursue){
    if !collision_line(x,y,PLAYER.x,PLAYER.y,obj_block,true,true){
        state = alert;
        alarm[1]=60;
        ai_left = false;
        ai_right = false;
        speed_run = 1;
        fire_count = irandom_range(60,180);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw sprite on screen
if sight{
    draw_sprite_ext(sprite_index,image_index,x,y,facing,image_yscale,image_angle,image_blend,image_alpha);
    }
/*
draw_set_color(c_yellow);
draw_triangle(x,y,x+ (sight_caution * facing),y-64,x+ (sight_caution * facing),y+64,false);
draw_set_colour(c_red);
draw_triangle(x,y,x+ (sight_alert * facing),y-32,x+ (sight_alert * facing),y+32,false);
draw_circle(gun_x,gun_y,5,false);
draw_set_colour(c_lime);
draw_line(x,y,PLAYER.x,PLAYER.y);
draw_circle(target_x,target_y,5,false);
draw_circle(x,jump_y,5,false);+*/
if state = shock{
    draw_sprite(spr_caution,0,x,y-32);
    }
if state = alert{
    draw_sprite(spr_alert,0,x,y-32);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
